<!DOCTYPE HTML>
<html>
  <head>
    <!-- Main -->
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Image Server - Upload</title>
        <noscript>Sorry, your browser does not support JavaScript or you don't have javascript enabled!</noscript>
        <meta name="description" content="Image Server">
        <meta name="keywords" content="images">
      <!-- Apple -->
        <meta name="author" content="Luis Pavel">
      <!-- Opend Graph-->
        <meta property="og:title" content="Image Server - Upload">
        <meta property="og:description" content="Image Server">  
      <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@800&display=swap');

        :root {
          --background_colour: #262626;
          --text_colour: #e0e0e0;
          --button_hover: #3a3a3d;
          --divs_colour: #262626;
          --filter: invert(100%) sepia(0%) saturate(12%) hue-rotate(199deg) brightness(100%) contrast(107%);
        }

        body {
          background: var(--background_colour);

          transition: all 0.2s;
          font-family: 'Roboto Slab', serif;
        }
        h1 {
          font-family: 'Roboto Slab', serif;
          font-size: 30px;
        }
        a, h1, path, svg {
          color: var(--text_colour);
        }
        path {
          filter: var(--filter);
        }

        #main {
          background-color: var(--divs_colour);
          color: var(--text_colour);

          width: 400px;
          height: auto;
          text-align: center;
          
          border-radius: 20px;

          border: 3px solid var(--text_colour);

          position: fixed;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
        }
        input[type="file"] {
          display: none;
        }
        #custom-file-upload {
          border: 3px solid var(--text_colour);
          border-radius: 10px;
          display: inline-block;
          padding: 10px;
          cursor: pointer;
        }
        #clear_file_input {
          width: 50px;
          height: 50px;
          border: 3px solid var(--text_colour);
          background: none;

          border-radius: 10px;
          
          cursor: pointer;
        }
        #clear_file_input > svg {
          transform: translate(0%, -10%);
        }
        #clear_file_input {
          display: none;
        }
        #file_upload_div > button, #file_upload_div > label {
          margin: 10px;
        }
        #file_upload_div {
          display: flex;
          align-items: center;
          justify-content: center;  
        }
        #token_input {
          width: 50%;
          background: none;
          border-radius: 10px;
          border: 3px solid var(--text_colour);
          height: 50px;
          text-align: center;
          outline: none;
        }
        #token_input::placeholder {
          color: var(--text_colour);
          font-size: 25px;
          font-family: 'Roboto Slab', serif;
        }
        #submit {
          width: 50%;
          background: none;
          border-radius: 10px;
          border: 3px solid var(--text_colour);
          height: 50px;
          text-align: center;

          font-size: 25px;
          color: var(--text_colour);

          margin-top: 10px;
          margin-bottom: 10px;

          cursor: pointer;
          font-family: 'Roboto Slab', serif;
        }
        #submit, #custom-file-upload, #clear_file_input {
          transition: all 0.2s;
        }
        #submit:hover, #custom-file-upload:hover, #clear_file_input:hover, #back:hover {
          background-color: var(--button_hover)
        }

        input[type="text"] {
          color: var(--text_colour);
          font-family: 'Roboto Slab', serif;
          font-size: 24px;
        }
        #separator {
          border: 0;
          border-top: 3px solid var(--text_colour);
        }
        #back {
          position: absolute;
          top: 10px;
          left: 10px;
          background: none;
          outline: 0;

          border-radius: 10px;
          border: 3px solid var(--text_colour);

          cursor: pointer;
        }
        #back > svg {
          width: 50px;
          height: 50px;
        }
      </style>
  </head>
  <body>
    <a href="<%- website %>"
      <button id="back">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M192 448c-8.188 0-16.38-3.125-22.62-9.375l-160-160c-12.5-12.5-12.5-32.75 0-45.25l160-160c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l137.4 137.4c12.5 12.5 12.5 32.75 0 45.25C208.4 444.9 200.2 448 192 448z"/></svg>
      </button>
    </a>
    <div id="main">
      <h1>Image Upload</h1>
      <hr id="separator">
      <div id="file_upload_div">
        <label for="file_upload" id="custom-file-upload">
         Upload
        </label>
        <button id="clear_file_input">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d="M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z"/></svg>
        </button>
        <input id="file_upload" type="file"/>
      </div>
      <div>
        <input type="text" id="token_input" placeholder="Auth Token">
      </div>
      <button id="submit">Upload</button>
      <h2 id="result"></h2>
    </div>
    
    <script>        
      let root = document.documentElement
      let file_upload = document.getElementById("file_upload")
      let custom_file_upload = document.getElementById("custom-file-upload")
      let clear_file_input = document.getElementById("clear_file_input")
      let token_input = document.getElementById("token_input")
      let result_text = document.getElementById("result")
      let submit = document.getElementById("submit")
      
      let theme = localStorage.getItem("theme")
      
      if (theme == 0) {
        root.style.setProperty('--background_colour', "#262626")
        root.style.setProperty('--text_colour', "#e0e0e0")
        root.style.setProperty('--divs_colour', "#262626")
        root.style.setProperty('--button_hover', "#3a3a3d")
        root.style.setProperty('--filter', "invert(100%) sepia(0%) saturate(12%) hue-rotate(199deg) brightness(100%) contrast(107%)")
      } else if (theme == 1) {
        root.style.setProperty('--background_colour', "white")
        root.style.setProperty('--text_colour', "black")
        root.style.setProperty('--divs_colour', "#c4c4c4")
        root.style.setProperty('--button_hover', "#adadad")
        root.style.setProperty('--filter', "none")
      } else if (theme == undefined) {
        localStorage.setItem("theme", 0)
      }

      file_upload.onchange = function (e) {
        clear_file_input.style.display = "initial"
        custom_file_upload.innerHTML = file_upload.files[0].name

        result_text.innerHTML = ""
      }

      token_input.onkeypress = function (e) {
        result_text.innerHTML = ""
      }

      clear_file_input.addEventListener("click", () => {
        clear_file_input.style.display = "none"
        custom_file_upload.innerHTML = "Upload"
        file_upload.value = ""
      })

      submit.addEventListener("click", async () => {
        const formData = new FormData()
        formData.append("file", file_upload.files[0])
        
        if (file_upload.files[0] == undefined) {
          result_text.innerHTML = "You have to enter a file"
        }else if (token_input.value == "") {
          result_text.innerHTML = "You have to enter a token"
        }else {
          let result = await fetch('/upload', {
            method: 'POST',
            headers: {
              Authentication: token_input.value
            },
            body: formData,
          })
          
          if (result.status == 200) {
            result_text.innerHTML = "The file was uploaded successfully"
          }else if (result.status == 401) {
            result_text.innerHTML = "The token is not valid"
          }
        }
      })
    </script>
  </body>
</html>